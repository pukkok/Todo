CORS 다른 프로토콜, 다른 포트에 있는 리소스를 요청하는 HTTP 방식

cors 에러 - 브라우저 에러
1) 서버 쪽의 코스 설정을 변경해서 요청하는 브라우저의 도메인 주소를 서버에 등록
서버            -           브라우저
xx.xx.xxx.xx            yy.yy.yyy.yy

2) 프록시서버를 우회해서 리소스 요청
서버에서 서버로 요청할때는 코스 오류가 안난다.
브라우저 와 서버간의 에러이기 때문에 프록시서버를 통하면 오류가 안난다.
open api - 프록시 서버 - 내 서버

credentials: true
사용자가 로그인 할 경우 사용자를 식별할 수 있는 ID값을 브라우저로 전송

<- 로그인

사용자 식별자(ID, 토큰) -> 로컬스토리지, 쿠키(= 브라우저의 데이터 저장소)

사용자 식별자와 함께 요청

credentials: true
사용자 정보가 들어가있는 요청도 응답 함

credentials: false
사용자 식별자(토큰, id)와 함께 요청이 오는 경우 응답하지 않음

브라우저에서 서버로 사전 요청(preflight request) - options 메서드
response header로 협조 공문 제출 - 확인하고 맞으면 본요청 시작. (본요청 get, post, put, delete)

서버 localhost: 5000
=> 일반적으로 cors에러
브라우저 localhost: 3000 (webpack-dev-server) 컴포넌트 및 jsx 엘리먼트 렌더링
옵션 확인

브라우저에서 서버로 사전요청 보내고
서버에서 허용한 주소 브라우저로 알려줌
브라우저에서 본인의 주소와 허용된 주소가 같는지 확인
아니라면 cors오류 발생시키고 본요청 안함


CSR SSR 개념 이해하기

REST API 서버

1) 데이터 모델링
2) API 설계 (URL 엔드포인트)

객체 생성 - 데이터 뼈대 구조
생성자 함수 정의 해서 데이터 받을 구조를 잡는다.

REST API : HTTP 메서드와 URL 엔드포인트를 조합하여 필요한 리소스를 요청